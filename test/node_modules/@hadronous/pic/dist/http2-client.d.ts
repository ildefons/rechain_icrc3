/// <reference types="node" />
/// <reference types="node" />
import { IncomingHttpHeaders, OutgoingHttpHeaders } from 'node:http2';
export interface Request {
    method: Method;
    path: string;
    headers?: OutgoingHttpHeaders;
    body?: Uint8Array;
}
export interface JsonGetRequest {
    path: string;
    headers?: OutgoingHttpHeaders;
}
export interface JsonPostRequest<B> {
    path: string;
    headers?: OutgoingHttpHeaders;
    body?: B;
}
export interface Response {
    status: number | undefined;
    body: string;
    headers: IncomingHttpHeaders;
}
export type Method = 'GET' | 'POST' | 'PUT' | 'DELETE';
export declare const JSON_HEADER: OutgoingHttpHeaders;
export declare class Http2Client {
    private readonly session;
    constructor(baseUrl: string);
    request(init: Request): Promise<Response>;
    jsonGet<R extends {}>(init: JsonGetRequest): Promise<R>;
    jsonPost<B, R>(init: JsonPostRequest<B>): Promise<R>;
}
